# /etc/nginx/sites-available/__DOMAIN__.conf
# Template for Nginx configuration. Placeholders: __DOMAIN__, __CONTAINER_PORT__

# Redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name __DOMAIN__ www.__DOMAIN__; # Handle www subdomain as well

    # For Let's Encrypt or other ACME clients validation
    location /.well-known/acme-challenge/ {
        # Adjust root path if your ACME client uses a different one
        root /var/www/html;
        allow all;
    }

    # Redirect all other HTTP traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS Server Block
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name __DOMAIN__ www.__DOMAIN__; # Handle www subdomain

    # SSL Certificate files (paths managed by deploy script)
    ssl_certificate /etc/nginx/ssl/__DOMAIN__.crt;
    ssl_certificate_key /etc/nginx/ssl/__DOMAIN__.key;

    # --- Modern & Secure SSL Settings ---
    # Recommendation from: https://ssl-config.mozilla.org/ (Intermediate)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m; # Adjust size as needed
    ssl_session_tickets off; # Consider security implications if enabling
    # --- End SSL Settings ---

    # Optional: OCSP Stapling for performance and privacy
    # ssl_stapling on;
    # ssl_stapling_verify on;
    # ssl_trusted_certificate /etc/nginx/ssl/__DOMAIN__.chain.pem; # Needs full chain cert including intermediates
    # resolver 8.8.8.8 8.8.4.4 valid=300s; # Google DNS or your preferred resolver
    # resolver_timeout 5s;

    # Optional: Diffie-Hellman parameters for extra security (if needed)
    # Generate on server: openssl dhparam -out /etc/nginx/ssl/dhparam.pem 2048
    # ssl_dhparam /etc/nginx/ssl/dhparam.pem;

    # --- Security Headers (Uncomment and adjust as needed) ---
    # add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always; # Be sure before adding preload
    # add_header X-Frame-Options "SAMEORIGIN" always;
    # add_header X-Content-Type-Options "nosniff" always;
    # add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    # add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
    # --- End Security Headers ---

    # Root and Index (optional, mainly for serving static files if needed directly)
    # root /var/www/__DOMAIN__/html;
    # index index.html index.htm;

    # Proxy requests to the Docker container
    location / {
        proxy_pass http://127.0.0.1:__CONTAINER_PORT__; # Proxy to the specified container port on loopback

        # --- Proxy Headers ---
        proxy_set_header Host $host; # Pass the original host header
        proxy_set_header X-Real-IP $remote_addr; # Pass the real client IP
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Append client IP to list
        proxy_set_header X-Forwarded-Proto $scheme; # Pass the original scheme (http/https)
        proxy_http_version 1.1;

        # --- WebSocket Support ---
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # --- Timeouts ---
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s; # Increase if needed for long-running requests

        # Prevent caching of potentially dynamic content by intermediate proxies
        proxy_cache_bypass $http_upgrade;
    }

    # Optional: Add specific location blocks for static files, rate limiting, etc.
    # location /static/ {
    #    alias /path/to/your/static/files/;
    #    expires 7d;
    #    access_log off;
    # }
}